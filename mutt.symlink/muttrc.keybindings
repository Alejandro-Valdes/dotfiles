# ----------------------------------------------------
# Mixed Key Bindings ---------------------------------
# ----------------------------------------------------

# The following are similar to Gmail key bindings

bind index,pager a  group-reply
bind index,pager r  reply
bind index,pager d  noop          # don't delete with d

bind generic,index,pager t noop   # do not tag with t
bind generic,index x tag-entry    # tag with x

bind index,pager c  mail          # compose new mail message
bind index,pager ^  break-thread  # break threads in two
bind index,pager &  link-threads  # link two (or more) threads together

macro index,pager <tab>  "<sync-mailbox><imap-fetch-mail>"  "sync and fetch imap"

# Misc helper macros

# macro index,pager o "<shell-escape>cd ~/.mail/bin; ./offlineimap-run.sh<enter>" "run offlineimap"
# macro index,pager O "<shell-escape>cd ~/.mail/bin; ./msmtp-run.sh<enter>"       "run msmtp"

# Reload ui config
macro index,pager,browser ,r "\
<enter-command> source \$my_mutt_path/muttrc.ui<enter>" \
"Reload ui config"

# Reload config
macro index,pager,browser ,R "\
<enter-command> source \$my_mutt_path/muttrc<enter>" \
"Reload config"

# Call urlview to extract URLs out of a message
macro index,pager,attach,compose ,u "\
<enter-command> set my_pipe_decode=\$pipe_decode pipe_decode<return>\
<enter-command> set my_wait_key=\$wait_key; unset wait_key<return>\
<pipe-message>urlview<return>\
<enter-command> set pipe_decode=\$my_pipe_decode; unset my_pipe_decode<return>\
<enter-command> set wait_key=\$my_wait_key; unset my_wait_key<return>" \
"call urlview to extract URLs out of a message"

# View with w3m
macro index,pager ,t "\
<enter-command> set my_pipe_decode=\$pipe_decode pipe_decode<return>\
<enter-command> set my_wait_key=\$wait_key; unset wait_key<return>\
<pipe-message>w3m<return>\
<enter-command> set pipe_decode=\$my_pipe_decode; unset my_pipe_decode<return>\
<enter-command> set wait_key=\$my_wait_key; unset my_wait_key<return>" \
"view with w3m"

# Open message in Gmail interface using system browser
macro index,pager ,o "\
<enter-command> set my_pipe_decode=\$pipe_decode; unset pipe_decode<return>\
<enter-command> set my_wait_key=\$wait_key; unset wait_key<return>\
<pipe-message>$my_mutt_path/open_in_gmail.rb<enter>\
<enter-command> set pipe_decode=\$my_pipe_decode; unset my_pipe_decode<return>\
<enter-command> set wait_key=\$my_wait_key; unset my_wait_key<return>" \
"open message in Gmail interface using system browser"


# ----------------------------------------------------
# Index Key Bindings ---------------------------------
# ----------------------------------------------------

bind index \Ct       noop

bind index gg        first-entry
bind index G         last-entry

bind index <space>   collapse-thread
bind index /         limit  # limit instead of search in index
bind index \Cr       toggle-read

# undelete
bind index u    undelete-message
bind index U    undelete-pattern
bind index \eu  undelete-thread
bind index \eU  undelete-subthread

# mark as read
bind index \er  read-thread
bind index \eR  read-subthread

# tag/untag (tag-entry bound to 'x', see above)
bind index t    tag-pattern
bind index T    untag-pattern
bind index \et  tag-thread
bind index \eT  tag-subthread

# Ctrl-R to mark all as read
# macro index \Cr "T~U<enter><tag-prefix><clear-flag>N<untag-pattern>.<enter>" "mark all messages as read"

# macro index,pager ,r "\
# <change-folder>><return>\
# <tag-pattern>!~y\\Inbox ~N<enter>\
# <tag-prefix><clear-flag>N\
# <untag-pattern>~A<enter>\
# <change-folder>-<enter>" \
# "mark all archived messages as read"

# ----------------------------------------------------
# Pager Key Bindings ---------------------------------
# ----------------------------------------------------

bind pager k        previous-line
bind pager j        next-line
bind pager gg       top
bind pager G        bottom
bind pager A        view-attachments
bind pager x        tag-message  # tag with x
bind pager <space>  noop

# Toggle line wrapping
set my_wrap_next = 0
macro pager ,w  "\
<enter-command> set my_wrap_current = \$wrap<return>\
<enter-command> set wrap = \$my_wrap_next<return>\
<enter-command> set my_wrap_next = \$my_wrap_current<return>\
<enter-command> unset my_wrap_current<return>" \
"toggle line wrapping"


# ----------------------------------------------------
# Line Editor Bindings -------------------------------
# ----------------------------------------------------

# Important to navigate to folders with spaces in name
bind editor <space> noop

# Auto-complete filenames and aliases
bind editor ^T complete

# Auto-complete contacts
bind editor <Tab> complete-query
