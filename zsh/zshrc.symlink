ZSH_PROFILING=n
if [ "$ZSH_PROFILING" = "y" ]; then
    if gdate >/dev/null 2>&1; then
        ZSH_PROFILING_GNUDATE=y

        # set the trace prompt to include seconds, nanoseconds, script name
        # and line number
        PS4='+$(gdate "+%s:%N") %N:%i> '
        # save file stderr to file descriptor 3 and redirect stderr (including
        # trace output) to a file with the script's PID as an extension
        exec 3>&2 2>/tmp/zsh.startlog.$$
        # set options to turn on tracing and expansion of commands contained
        # in the prompt
        setopt xtrace prompt_subst
    else
        echo "ZSH_PROFILING needs GNU date for milliseconds support, abort profiling."
    fi
fi

# This file is shared across all environments:
# * on linux workstations the shortcut M-Esc is bound to:
#     toggle-window -n fullscreen-terminal \
#       -c "gnome-terminal --full-screen --hide-menubar \
#       --working-directory=~ -t fullscreen-terminal -e \
#       'env FULLSCREEN_TERMINAL=y zsh'"
#   and normal terminal run windowed without \
#   FULLSCREEN_TERMINAL being set.
# * on linux servers the shell variable $SSH_TTY is non-empty.
# * on osx the shortcut M-Esc is bound to a fullscreen
#   instance of iTerm2 (still need to find a way to set
#   FULLSCREEN_TERMINAL in that setup).

# For OS specific configurations
OS=$(uname -s)

# Set the PATH for linux
# Note that for macosx the path needs to be set in /etc/paths and /etc/paths.d
# As of writing zsh has a bug on macosx and needs the following command to
# honour /etc/paths and /etc/paths.d: sudo cp /etc/zshenv /etc/zprofile
# See file /etc/paths in /macosx/etc/paths inside this repo.
if [ "$OS" = "Linux" ]; then
  PATH=/sbin:/bin
  for p in /usr/bin /usr/sbin /usr/local/bin /usr/local/sbin /opt/local/bin /opt/local/sbin /usr/local/git/bin ~/usr/bin ~/.rvm/bin; do
    [ -d $p ] && PATH=$p:$PATH
  done
  export PATH
fi

# Fix SSH_AUTH_SOCK when called from gnome shortcut key
# See https://bugzilla.redhat.com/show_bug.cgi?id=713955
if [ "$OS" = "Linux" ]; then
  SSH_AUTH_SOCK=`netstat -xl | grep -o '/tmp/keyring-.*/ssh$'`
  [ -n "$SSH_AUTH_SOCK" ] && export SSH_AUTH_SOCK
fi

# Should we start tmux?
# Values of ZSH_USE_TMUX:
# * 0: don't start tmux
# * 1: attach to first deattached tmux, or create new one
# * 2: attach to first tmux (multiple clients share same tmux)
if [[ -n "$SSH_TTY" ]]; then
    ZSH_USE_TMUX=2
elif [[ -n "$FULLSCREEN_TERMINAL" ]]; then
    ZSH_USE_TMUX=1
else
    ZSH_USE_TMUX=0
fi

# Start tmux (if not already started)
if [[ -z "$TMUX" && $ZSH_USE_TMUX > 0 ]]; then
  if [[ $ZSH_USE_TMUX = 2 ]]; then
    tmux_shared 'shared' && exit $?
  elif [[ $ZSH_USE_TMUX = 1 ]]; then
    if tmux ls 2> /dev/null | grep -v '(attached)$' > /dev/null; then
      tmux attach && exit $?
    else
      tmux -2 && exit $?
    fi
  fi
fi

# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Path to override the default ZSH custom directory
ZSH_CUSTOM=$(dirname $(realpath ${ZDOTDIR-~}/.zshrc))/custom

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="sgeb"

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable weekly auto-update checks
# Disabled, causes slow starts of zsh
#DISABLE_AUTO_UPDATE="true"

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal
# title.
# Do no update title if on linux and outside tmux, needed for the
# system-wide console hotkey (xdotool checks the window title)
[[ "$OS" = "Linux" && -z "$TMUX" ]] && DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
COMPLETION_WAITING_DOTS="true"

# Don't change virtualenv on cd
DISABLE_VENV_CD=1

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# plugins=(git-flow extract sgeb-git sgeb-braindump virtualenvwrapper)
# virtualenvwrapper seems to slow down zsh loading a lot
plugins=(git-flow extract sgeb-braindump)

# OS specific plugins
[[ "$OS" = "Linux" ]] && plugins+=(sgeb-apt)
[[ "$OS" = "Darwin" ]] && plugins+=(brew) #(osx mate)

# plugins=
# ZSH_THEME=
source $ZSH/oh-my-zsh.sh

# Set colors for ls
[[ "$OS" == "Linux" ]] && export LS_COLORS="di=34;40:ln=35;40:so=32;40:pi=33;40:ex=31;40:bd=34;46:cd=34;43:su=0;41:sg=0;46:tw=0;42:ow=0;43:"
[[ "$OS" == "Darwin" ]] && export LSCOLORS="exfxcxdxbxegedabagacad"

# Load RVM into a shell session *as a function*
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"

if [ "$ZSH_PROFILING" = "y" -a "$ZSH_PROFILING_GNUDATE" = "y" ]; then
    # turn off tracing
    unsetopt xtrace
    # restore stderr to the value saved in FD 3
    exec 2>&3 3>&-
fi

